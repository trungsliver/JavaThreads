======================== BLOCKING QUEUE ========================
1. Giới thiệu về Blocking Queue
    - BlockingQueue là một interface trong Java dùng để hỗ trợ cơ chế chờ (blocking) khi:
    - Thêm phần tử vào hàng đợi khi hàng đợi đang đầy → thread bị chặn cho đến khi có chỗ trống.
    - Lấy phần tử khỏi hàng đợi khi hàng đợi đang rỗng → thread bị chặn cho đến khi có phần tử.
    ➡️ Đây là công cụ rất hữu ích trong các ứng dụng đa luồng (multi-threading), nơi các thread cần giao tiếp với nhau qua hàng đợi.


2. Các Interface liên quan đến Blocking Queue
    - BlockingQueue: Interface chính cho hàng đợi chặn.
        + BlockingDeque: Biến thể cho phép chặn cả hai đầu hàng đợi (Deque = Double Ended Queue).
        + TransferQueue: Cho phép chờ đến khi một phần tử được lấy bởi thread khác sau khi được đưa vào.


3. Các lớp cài đặt chính của BlockingQueue
    | Lớp                     | Đặc điểm                                                                     |
    | ----------------------- | ---------------------------------------------------------------------------- |
    | `ArrayBlockingQueue`    | Dựa trên mảng có kích thước cố định.                                         |
    | `LinkedBlockingQueue`   | Dựa trên danh sách liên kết, có thể có kích thước không giới hạn (mặc định). |
    | `PriorityBlockingQueue` | Hàng đợi có thứ tự ưu tiên, không chặn khi thêm nhưng chặn khi lấy.          |
    | `DelayQueue`            | Chỉ cho phép lấy phần tử khi một khoảng delay đã hết hạn.                    |
    | `SynchronousQueue`      | Không có bộ nhớ đệm, mỗi lần thêm cần một thread nhận tương ứng.             |


4. Các thao tác phổ biến với Blocking Queue
    | Phương thức  | Mô tả                                                         |
    | ------------ | ------------------------------------------------------------- |
    | `put(E e)`   | Thêm phần tử vào hàng đợi, chờ nếu hàng đợi đầy.          |
    | `take()`     | Lấy và xóa phần tử đầu tiên trong hàng đợi, chờ nếu rỗng. |
    | `offer(E e)` | Thêm phần tử nếu còn chỗ, không chặn.                     |
    | `poll()`     | Lấy và xóa phần tử đầu tiên nếu có, không chặn.           |
    | `peek()`     | Xem phần tử đầu tiên nhưng không xóa nó ra khỏi hàng đợi. |


5. Tóm tắt ứng dụng
    - BlockingQueue rất phù hợp với Producer - Consumer pattern:
    - Thread Producer thêm dữ liệu vào hàng đợi.
    - Thread Consumer lấy dữ liệu để xử lý.
    👉 Đây là giải pháp quan trọng giúp đảm bảo đồng bộ và thread-safe trong các hệ thống xử lý đa luồng.